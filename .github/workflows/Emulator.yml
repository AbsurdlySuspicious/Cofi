# This is a basic workflow to help you get started with Actions

name: Emulator tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Android Emulator Runner
      # You may pin to the exact commit or the version.
      # uses: ReactiveCircus/android-emulator-runner@08b092e904025fada32a01b711af1e7ff7b7a4a3
        uses: ReactiveCircus/android-emulator-runner@08b092e904025fada32a01b711af1e7ff7b7a4a3
        with:
        # API level of the platform and system image - e.g. 23 for Android Marshmallow, 29 for Android 10
          api-level: 30
        # custom script to run - e.g. `./gradlew connectedCheck`
          script: './gradlew connectedCheck'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Create empty keystore
        run: echo "storeFile=/" > keystore.properties
      - name: Android Instrumantation Tests
        run: ./gradlew connectedFullDebugAndroidTest
